/** * Right menu with all list selections. Here we will have the list * of all the MovieClip, Images and the TextField   *  **/package com.ipnotica.menu {		import com.ipnotica.menu.content.MenuContent;	import com.ipnotica.menu.header.MenuHeader;	import com.ipnotica.utils.Config;	import com.ipnotica.utils.CustomEvents;	import com.ipnotica.utils.Utils;		import flash.display.MovieClip;	import flash.events.Event;	import flash.events.MouseEvent;	import flash.net.URLLoader;	import flash.net.URLRequest;	public class Menu extends MovieClip {				public var header:MenuHeader;				/**< Header. Controls the content (category selection or text fill) */		public var content:MenuContent;				/**< Content. Contains all movieclips, images or texts */				public function Menu() {			super();			init();		}				private function init():void {			Utils.setConfig(this);			initListeners()		}						/** Listen when menu buttons are clicked **/		private function initListeners():void {			Config.body.header.products.addEventListener(MouseEvent.CLICK, onClickProducts);			Config.body.header.images.addEventListener(MouseEvent.CLICK, onClickImages);			Config.body.header.text.addEventListener(MouseEvent.CLICK, onClickText);		}				public function onClickProducts(e:Event):void {			trace("You clicked the *products* selection");			Config.menuFamily = "products";		}				public function onClickImages(e:Event):void {			trace("You clicked the *images* selection");			Config.menuFamily = "images";			loadData();		}				public function onClickText(e:Event):void {			trace("You clicked the *text* selection");			Config.menuFamily = "text";		}							/** 		 * Load the data to put on the slider. For images and products		 * will be an XML, but for the Fonts will be an SWF. This is a 		 * case we will have to think about		 **/		public function loadData():void {			var url:URLRequest = new URLRequest(Config.flashvars.httpDomain + Config.flashvars.assets + Config.flashvars.xml + "images.xml"); 			var loader:URLLoader = new URLLoader(url);			loader.addEventListener(Event.COMPLETE, onDataLoaded);		}				// when products are loaded the event PRODUCTS_LOADED is fired		private function onDataLoaded(e:Event):void {			Config.menuItems = new XMLList(e.target.data).image;			dispatchEvent(new CustomEvents(CustomEvents.MENU_DATA_LOADED, {type: "images"}));		}						/** 		 * Update the menu content		 **/		 		private function onMenuDataLoaded():void {			addEventListener(CustomEvents.MENU_DATA_LOADED, update);		} 				private function update(e:CustomEvents):void {			header.update();			content.slider.update();		}			 	}}            